"""
=====================================
Test cases for BaseGeometry class
=====================================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> f = __import__('7-base_geometry').BaseGeometry.__doc__
>>> len(f) > 1 
True

>>> l = __import__('7-base_geometry').__doc__
>>> len(l) > 1
True

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

>>> print(bg.area())
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("positive", 42)

>>> bg.integer_validator("large", 999999999)
>>> bg.integer_validator("not_an_int", "abc")
Traceback (most recent call last):
TypeError: not_an_int must be an integer

>>> bg.integer_validator("float_value", 3.14)
Traceback (most recent call last):
TypeError: float_value must be an integer

>>> bg.integer_validator("negative", -10)
Traceback (most recent call last):
ValueError: negative must be greater than 0
>>> bg.integer_validator("", 42)
>>> bg.integer_validator("large_negative", -999999999)
Traceback (most recent call last):
ValueError: large_negative must be greater than 0

>>> bg.integer_validator("average")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("NaN", float('nan'))
Traceback (most recent call last):
TypeError: NaN must be an integer

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer
